<!DOCTYPE html>
<html>
  <head>
    <meta charset=utf-8"utf-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no"
    />
    <link
      rel="shortcut icon"
      type="image/x-icon"
      href="https://img.alicdn.com/tfs/TB1YHEpwUT1gK0jSZFhXXaAtVXa-28-27.svg"
    />
    <link rel="stylesheet" href="../umi.css" tppabs="https://umijs.org/umi.css" />
    <script>
      window.routerBase = "/";
    </script>
    <script>
      //! umi version: 3.2.3
    </script>
    <title>Runtime Config</title>
  </head>
  <body>
    <div id="root"><div class="__dumi-default-layout" data-show-sidemenu="true" data-show-slugs="true" data-site-mode="true" data-gapless="false"><div class="__dumi-default-navbar" data-mode="site"><button class="__dumi-default-navbar-toggle"></button><a class="__dumi-default-navbar-logo" href="../index.htm" tppabs="https://umijs.org/">UmiJS</a><nav><div class="__dumi-default-search"><input type="search" class="__dumi-default-search-input" value=""/><ul></ul></div><a aria-current="page" class="active" href="../docs.htm" tppabs="https://umijs.org/docs">Docs</a><a href="../config.htm" tppabs="https://umijs.org/config">Config</a><a href="../api.htm" tppabs="https://umijs.org/api">API</a><a href="../guide.htm" tppabs="https://umijs.org/guide">Guide</a><a href="../plugins.htm" tppabs="https://umijs.org/plugins">Plugins</a><a target="_blank" href="javascript:if(confirm('https://v2.umijs.org/  \n\n∏√Œƒº˛Œﬁ∑®”√ Teleport Ultra œ¬‘ÿ, “ÚŒ™ À¸ «“ª∏ˆ”ÚªÚ¬∑æ∂Õ‚≤ø±ª…Ë÷√Œ™À¸µƒ∆Ù ºµÿ÷∑µƒµÿ÷∑°£  \n\nƒ„œÎ‘⁄∑˛ŒÒ∆˜…œ¥Úø™À¸?'))window.location='https://v2.umijs.org/'" tppabs="https://v2.umijs.org/">v2.x<svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="__dumi-default-external-link-icon"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path><polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg></a><a target="_blank" href="javascript:if(confirm('https://github.com/umijs/umi  \n\n∏√Œƒº˛Œﬁ∑®”√ Teleport Ultra œ¬‘ÿ, “ÚŒ™ À¸ «“ª∏ˆ”ÚªÚ¬∑æ∂Õ‚≤ø±ª…Ë÷√Œ™À¸µƒ∆Ù ºµÿ÷∑µƒµÿ÷∑°£  \n\nƒ„œÎ‘⁄∑˛ŒÒ∆˜…œ¥Úø™À¸?'))window.location='https://github.com/umijs/umi'" tppabs="https://github.com/umijs/umi">GitHub<svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="__dumi-default-external-link-icon"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path><polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg></a><div class="__dumi-default-locale-select" data-locale-count="2"><span>‰∏≠Êñá</span></div></nav></div><div class="__dumi-default-menu" data-mode="site"><div class="__dumi-default-menu-inner"><div class="__dumi-default-menu-header"><a class="__dumi-default-menu-logo" href="../index.htm" tppabs="https://umijs.org/"></a><h1>UmiJS</h1><p></p></div><div class="__dumi-default-menu-mobile-area"><ul class="__dumi-default-menu-nav-list"><li><a aria-current="page" class="active" href="../docs.htm" tppabs="https://umijs.org/docs">Docs</a></li><li><a href="../config.htm" tppabs="https://umijs.org/config">Config</a></li><li><a href="../api.htm" tppabs="https://umijs.org/api">API</a></li><li><a href="../guide.htm" tppabs="https://umijs.org/guide">Guide</a></li><li><a href="../plugins.htm" tppabs="https://umijs.org/plugins">Plugins</a></li><li><a target="_blank" href="javascript:if(confirm('https://v2.umijs.org/  \n\n∏√Œƒº˛Œﬁ∑®”√ Teleport Ultra œ¬‘ÿ, “ÚŒ™ À¸ «“ª∏ˆ”ÚªÚ¬∑æ∂Õ‚≤ø±ª…Ë÷√Œ™À¸µƒ∆Ù ºµÿ÷∑µƒµÿ÷∑°£  \n\nƒ„œÎ‘⁄∑˛ŒÒ∆˜…œ¥Úø™À¸?'))window.location='https://v2.umijs.org/'" tppabs="https://v2.umijs.org/">v2.x<svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="__dumi-default-external-link-icon"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path><polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg></a></li><li><a target="_blank" href="javascript:if(confirm('https://github.com/umijs/umi  \n\n∏√Œƒº˛Œﬁ∑®”√ Teleport Ultra œ¬‘ÿ, “ÚŒ™ À¸ «“ª∏ˆ”ÚªÚ¬∑æ∂Õ‚≤ø±ª…Ë÷√Œ™À¸µƒ∆Ù ºµÿ÷∑µƒµÿ÷∑°£  \n\nƒ„œÎ‘⁄∑˛ŒÒ∆˜…œ¥Úø™À¸?'))window.location='https://github.com/umijs/umi'" tppabs="https://github.com/umijs/umi">GitHub<svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="__dumi-default-external-link-icon"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path><polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg></a></li></ul><div class="__dumi-default-locale-select" data-locale-count="2"><span>‰∏≠Êñá</span></div></div><ul class="__dumi-default-menu-list"><li><a>VERSION 3.X</a></li><li><a>Introduce</a><ul><li><a href="../docs.htm" tppabs="https://umijs.org/docs"><span>Introduce</span></a></li><li><a href="how-umi-works.htm" tppabs="https://umijs.org/docs/how-umi-works"><span>How Umi Works</span></a></li><li><a href="getting-started.htm" tppabs="https://umijs.org/docs/getting-started"><span>Getting Started</span></a></li></ul></li><li><a>Umi Basic</a><ul><li><a href="directory-structure.htm" tppabs="https://umijs.org/docs/directory-structure"><span>Directory structure</span></a></li><li><a href="config.htm" tppabs="https://umijs.org/docs/config"><span>Config</span></a></li><li><a aria-current="page" class="active" href="runtime-config.htm" tppabs="https://umijs.org/docs/runtime-config"><span>Runtime Config</span></a></li><li><a href="routing.htm" tppabs="https://umijs.org/docs/routing"><span>Routing</span></a></li><li><a href="convention-routing.htm" tppabs="https://umijs.org/docs/convention-routing"><span>Convention Routing</span></a></li><li><a href="plugin.htm" tppabs="https://umijs.org/docs/plugin"><span>Plugin</span></a></li><li><a href="navigate-between-pages.htm" tppabs="https://umijs.org/docs/navigate-between-pages"><span>Navigate Between Pages</span></a></li><li><a href="html-template.htm" tppabs="https://umijs.org/docs/html-template"><span>HTML Template</span></a></li><li><a href="mock.htm" tppabs="https://umijs.org/docs/mock"><span>Mock Data</span></a></li><li><a href="env-variables.htm" tppabs="https://umijs.org/docs/env-variables"><span>Env Variables</span></a></li><li><a href="cli.htm" tppabs="https://umijs.org/docs/cli"><span>Cli Commands</span></a></li></ul></li><li><a>Styles and Assets</a><ul><li><a href="assets-css.htm" tppabs="https://umijs.org/docs/assets-css"><span>Use CSS</span></a></li><li><a href="assets-image.htm" tppabs="https://umijs.org/docs/assets-image"><span>Use Image</span></a></li></ul></li><li><a>Umi Advanced</a><ul><li><a href="load-on-demand.htm" tppabs="https://umijs.org/docs/load-on-demand"><span>Load On Demand</span></a></li><li><a href="deployment.htm" tppabs="https://umijs.org/docs/deployment"><span>Deployment</span></a></li><li><a href="use-umi-ui.htm" tppabs="https://umijs.org/docs/use-umi-ui"><span>Using Umi UI</span></a></li><li><a href="ssr.htm" tppabs="https://umijs.org/docs/ssr"><span>ÊúçÂä°Á´ØÊ∏≤ÊüìÔºàSSRÔºâ</span></a></li></ul></li><li><a href="upgrade-to-umi-3.htm" tppabs="https://umijs.org/docs/upgrade-to-umi-3">Upgrade to Umi 3</a></li><li><a href="contributing.htm" tppabs="https://umijs.org/docs/contributing">CONTRIBUTING</a></li><li><a href="faq.htm" tppabs="https://umijs.org/docs/faq">FAQ</a></li></ul></div></div><ul class="__dumi-default-layout-toc" role="slug-list"><li title="How to use" data-depth="2" class=""><a href="runtime-config.htm#how-to-use" tppabs="https://umijs.org/docs/runtime-config#how-to-use"><span>How to use</span></a></li><li title="Options" data-depth="2" class=""><a href="runtime-config.htm#options" tppabs="https://umijs.org/docs/runtime-config#options"><span>Options</span></a></li><li title="patchRoutes({ routes })" data-depth="3" class=""><a href="runtime-config.htm#patchroutes-routes-" tppabs="https://umijs.org/docs/runtime-config#patchroutes-routes-"><span>patchRoutes({ routes })</span></a></li><li title="render(oldRender: Function)" data-depth="3" class=""><a href="runtime-config.htm#renderoldrender-function" tppabs="https://umijs.org/docs/runtime-config#renderoldrender-function"><span>render(oldRender: Function)</span></a></li><li title="onRouteChange({ routes, matchedRoutes, location, action })" data-depth="3" class=""><a href="runtime-config.htm#onroutechange-routes-matchedroutes-location-action-" tppabs="https://umijs.org/docs/runtime-config#onroutechange-routes-matchedroutes-location-action-"><span>onRouteChange({ routes, matchedRoutes, location, action })</span></a></li><li title="rootContainer(LastRootContainer)" data-depth="3" class=""><a href="runtime-config.htm#rootcontainerlastrootcontainer" tppabs="https://umijs.org/docs/runtime-config#rootcontainerlastrootcontainer"><span>rootContainer(LastRootContainer)</span></a></li><li title="More options" data-depth="2" class=""><a href="runtime-config.htm#more-options" tppabs="https://umijs.org/docs/runtime-config#more-options"><span>More options</span></a></li></ul><div class="__dumi-default-layout-content"><div class="markdown"><h1 id="runtime-config"><a aria-hidden="true" href="#runtime-config"><span class="icon icon-link"></span></a>Runtime Config</h1><p>The difference between runtime-config and config is execution timing, runtime-config is evaluated while your app running in browser. Therefor, <code>function</code>, <code>jsx</code>, <code>import</code> and other <strong>browser-runnable</strong> snippets can be used.</p><blockquote><p><code>node</code> exclusive dependencies should not working.</p></blockquote><h2 id="how-to-use"><a aria-hidden="true" href="#how-to-use"><span class="icon icon-link"></span></a>How to use</h2><p>As convention, <code>src/app.tsx</code> is the place you will put the runtime-config.</p><h2 id="options"><a aria-hidden="true" href="#options"><span class="icon icon-link"></span></a>Options</h2><h3 id="patchroutes-routes-"><a aria-hidden="true" href="#patchroutes-routes-"><span class="icon icon-link"></span></a>patchRoutes(<!-- -->{<!-- --> routes <!-- -->}<!-- -->)</h3><p>Modify routing.</p><p>For example, prepend a new route <code>/foo</code> before all other routes.</p><div class="__dumi-default-code-block"><pre class="prism-code language-bash"><button title="" type="button" class="__dumi-default-icon __dumi-default-btn-copy __dumi-default-code-block-copy-btn" data-clipboard-text="export function patchRoutes({ routes }) {
  routes.unshift({
    path: &#x27;/foo&#x27;,
    exact: true,
    component: require(&#x27;@/extraRoutes/foo&#x27;).default,
  });
}
" data-status="copy"></button><div class="token-line"><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token keyword">function</span><span class="token plain"> patchRoutes</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token plain"> routes </span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">  routes.unshift</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">    path: </span><span class="token string">&#x27;/foo&#x27;</span><span class="token plain">,</span></div><div class="token-line"><span class="token plain">    exact: true,</span></div><div class="token-line"><span class="token plain">    component: require</span><span class="token punctuation">(</span><span class="token string">&#x27;@/extraRoutes/foo&#x27;</span><span class="token punctuation">)</span><span class="token plain">.default,</span></div><div class="token-line"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span></div><div class="token-line"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span></div><div class="token-line"><span class="token plain"></span></div></pre></div><p>For example, work with <code>render</code>, modify routes based on API response.</p><div class="__dumi-default-code-block"><pre class="prism-code language-bash"><button title="" type="button" class="__dumi-default-icon __dumi-default-btn-copy __dumi-default-code-block-copy-btn" data-clipboard-text="let extraRoutes;

export function patchRoutes({ routes }) {
  merge(routes, extraRoutes);
}

export function render() {
  fetch(&#x27;/api/routes&#x27;).then((res) =&gt; { extraRoutes = res.routes })
}
" data-status="copy"></button><div class="token-line"><span class="token builtin class-name">let</span><span class="token plain"> extraRoutes</span><span class="token punctuation">;</span><span class="token plain"></span></div><div class="token-line"><span class="token plain"></span></div><div class="token-line"><span class="token plain"></span><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token keyword">function</span><span class="token plain"> patchRoutes</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token plain"> routes </span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">  merge</span><span class="token punctuation">(</span><span class="token plain">routes, extraRoutes</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span></div><div class="token-line"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span></div><div class="token-line"><span class="token plain"></span></div><div class="token-line"><span class="token plain"></span><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token keyword">function</span><span class="token plain"> </span><span class="token function-name function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">  fetch</span><span class="token punctuation">(</span><span class="token string">&#x27;/api/routes&#x27;</span><span class="token punctuation">)</span><span class="token plain">.then</span><span class="token punctuation">((</span><span class="token plain">res</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> extraRoutes </span><span class="token operator">=</span><span class="token plain"> res.routes </span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token plain"></span></div><div class="token-line"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span></div><div class="token-line"><span class="token plain"></span></div></pre></div><p>NoticeÔºö</p><ul><li>Modify <code>routes</code> instead of returning a new one</li></ul><h3 id="renderoldrender-function"><a aria-hidden="true" href="#renderoldrender-function"><span class="icon icon-link"></span></a>render(oldRender: Function)</h3><p>Overwrite <code>render</code>.</p><p>For example, check authority before rendering</p><div class="__dumi-default-code-block"><pre class="prism-code language-bash"><button title="" type="button" class="__dumi-default-icon __dumi-default-btn-copy __dumi-default-code-block-copy-btn" data-clipboard-text="import { history } from &#x27;umi&#x27;;

export function render(oldRender) {
  fetch(&#x27;/api/auth&#x27;).then(auth =&gt; {
    if (auth.isLogin) { oldRender() }
    else { history.push(&#x27;/login&#x27;); }
  });
}
" data-status="copy"></button><div class="token-line"><span class="token function">import</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token function">history</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token plain"> from </span><span class="token string">&#x27;umi&#x27;</span><span class="token punctuation">;</span><span class="token plain"></span></div><div class="token-line"><span class="token plain"></span></div><div class="token-line"><span class="token plain"></span><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token keyword">function</span><span class="token plain"> render</span><span class="token punctuation">(</span><span class="token plain">oldRender</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">  fetch</span><span class="token punctuation">(</span><span class="token string">&#x27;/api/auth&#x27;</span><span class="token punctuation">)</span><span class="token plain">.then</span><span class="token punctuation">(</span><span class="token plain">auth </span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">    </span><span class="token keyword">if</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain">auth.isLogin</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> oldRender</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">    </span><span class="token keyword">else</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> history.push</span><span class="token punctuation">(</span><span class="token string">&#x27;/login&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span></div><div class="token-line"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span></div><div class="token-line"><span class="token plain"></span></div></pre></div><h3 id="onroutechange-routes-matchedroutes-location-action-"><a aria-hidden="true" href="#onroutechange-routes-matchedroutes-location-action-"><span class="icon icon-link"></span></a>onRouteChange(<!-- -->{<!-- --> routes, matchedRoutes, location, action <!-- -->}<!-- -->)</h3><p>Change something at route initialization/chaning phase.</p><p>For example, event tracking and analysis:</p><div class="__dumi-default-code-block"><pre class="prism-code language-bash"><button title="" type="button" class="__dumi-default-icon __dumi-default-btn-copy __dumi-default-code-block-copy-btn" data-clipboard-text="export function onRouteChange({ location, routes, action }) {
  bacon(location.pathname);
}
" data-status="copy"></button><div class="token-line"><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token keyword">function</span><span class="token plain"> onRouteChange</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token plain"> location, routes, action </span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">  bacon</span><span class="token punctuation">(</span><span class="token plain">location.pathname</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span></div><div class="token-line"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span></div><div class="token-line"><span class="token plain"></span></div></pre></div><p>For example, setup title:</p><div class="__dumi-default-code-block"><pre class="prism-code language-bash"><button title="" type="button" class="__dumi-default-icon __dumi-default-btn-copy __dumi-default-code-block-copy-btn" data-clipboard-text="export function onRouteChange({ matchedRoutes }) {
  if (matchRoutes.length) {
    document.title = matchedRoutes[matchRoutes.length - 1].route.title || &#x27;&#x27;;
  }
}
" data-status="copy"></button><div class="token-line"><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token keyword">function</span><span class="token plain"> onRouteChange</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token plain"> matchedRoutes </span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">  </span><span class="token keyword">if</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain">matchRoutes.length</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">    document.title </span><span class="token operator">=</span><span class="token plain"> matchedRoutes</span><span class="token punctuation">[</span><span class="token plain">matchRoutes.length - </span><span class="token number">1</span><span class="token punctuation">]</span><span class="token plain">.route.title </span><span class="token operator">||</span><span class="token plain"> </span><span class="token string">&#x27;&#x27;</span><span class="token punctuation">;</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span></div><div class="token-line"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span></div><div class="token-line"><span class="token plain"></span></div></pre></div><h3 id="rootcontainerlastrootcontainer"><a aria-hidden="true" href="#rootcontainerlastrootcontainer"><span class="icon icon-link"></span></a>rootContainer(LastRootContainer)</h3><p>Modify root component being passed to <code>react-dom</code>.</p><p>For example, wrap a <code>Provider</code>:</p><div class="__dumi-default-code-block"><pre class="prism-code language-bash"><button title="" type="button" class="__dumi-default-icon __dumi-default-btn-copy __dumi-default-code-block-copy-btn" data-clipboard-text="export function rootContainer(container) {
  return React.createElement(ThemeProvider, null, container);
}
" data-status="copy"></button><div class="token-line"><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token keyword">function</span><span class="token plain"> rootContainer</span><span class="token punctuation">(</span><span class="token plain">container</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span></div><div class="token-line"><span class="token plain">  </span><span class="token builtin class-name">return</span><span class="token plain"> React.createElement</span><span class="token punctuation">(</span><span class="token plain">ThemeProvider, null, container</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span></div><div class="token-line"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span></div><div class="token-line"><span class="token plain"></span></div></pre></div><h2 id="more-options"><a aria-hidden="true" href="#more-options"><span class="icon icon-link"></span></a>More options</h2><p>Since <code>umi</code> support modifing runtime-config via plugin, which means you may find more runtime-config options with plugins you involved.</p></div><div class="__dumi-default-layout-footer-meta"><a target="_blank" href="javascript:if(confirm('https://github.com/umijs/umi/edit/master/docs/docs/runtime-config.md  \n\n∏√Œƒº˛Œﬁ∑®”√ Teleport Ultra œ¬‘ÿ, “ÚŒ™ À¸ «“ª∏ˆ”ÚªÚ¬∑æ∂Õ‚≤ø±ª…Ë÷√Œ™À¸µƒ∆Ù ºµÿ÷∑µƒµÿ÷∑°£  \n\nƒ„œÎ‘⁄∑˛ŒÒ∆˜…œ¥Úø™À¸?'))window.location='https://github.com/umijs/umi/edit/master/docs/docs/runtime-config.md'" tppabs="https://github.com/umijs/umi/edit/master/docs/docs/runtime-config.md">Edit this doc on GitHub<svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="__dumi-default-external-link-icon"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path><polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg></a><span data-updated-text="Last Update: ">6/10/2020, 7:42:23 AM</span></div></div></div></div>
	<script>
  window.g_useSSR = true;
  window.g_initialProps = {};
	</script>

    <script>
      (function () {
        if (!location.port) {
          (function (i, s, o, g, r, a, m) {
            i["GoogleAnalyticsObject"] = r;
            (i[r] =
              i[r] ||
              function () {
                (i[r].q = i[r].q || []).push(arguments);
              }),
              (i[r].l = 1 * new Date());
            (a = s.createElement(o)), (m = s.getElementsByTagName(o)[0]);
            a.async = 1;
            a.src = g;
            m.parentNode.insertBefore(a, m);
          })(
            window,
            document,
            "script",
            "../../www.google-analytics.com/analytics.js"/*tpa=https://www.google-analytics.com/analytics.js*/,
            "ga"
          );
          ga("create", "UA-149864185-1", "auto");
          ga("send", "pageview");
        }
      })();
    </script>
    <script src="../umi.js" tppabs="https://umijs.org/umi.js"></script>
  </body>
</html>
